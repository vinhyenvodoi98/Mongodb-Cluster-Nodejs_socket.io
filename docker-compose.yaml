version: '3'

services:
  node_server:
    hostname: node_server
    container_name: node_server
    build: ./Node_server
    working_dir: /usr/src/app
    volumes:
      - ./Node_server:/usr/src/app
    expose:
      - 3000
    ports:
      - '3000:3000'
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - app-network
    restart: always
    command: 'yarn start'

  vue_frontend:
    hostname: vue_frontend
    image: 'node:10-alpine'
    container_name: vue-frontend
    restart: always
    working_dir: /app
    volumes:
      - ./frontend:/app
    depends_on:
      - node_server
    ports:
      - '8080:8080'
    networks:
      - app-network
    command: 'yarn serve'

  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo
    volumes:
      - ./data/data1/db:/data/db
      - ./data/data1/configdb:/data/configdb
    networks:
      - app-network
    expose:
      - 27017
    ports:
      - 30001:27017
    restart: always
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'devrs']

  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo
    volumes:
      - ./data/data2/db:/data/db
      - ./data/data2/configdb:/data/configdb
    networks:
      - app-network
    expose:
      - 27017
    ports:
      - 30002:27017
    restart: always
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'devrs']

  mongo3:
    hostname: mongo3
    container_name: mongo3
    image: mongo
    volumes:
      - ./data/data3/db:/data/db
      - ./data/data3/configdb:/data/configdb
    networks:
      - app-network
    expose:
      - 27017
    ports:
      - 30003:27017
    restart: always
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'devrs']

networks:
  app-network:
    driver: bridge
